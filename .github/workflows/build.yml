name: Deploy to AWS App Runner

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        env:
            NODE_ENV: ${{ secrets.NODE_ENV || 'production' }}
            VITE_API_URL: ${{ secrets.VITE_API_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            VITE_PAYPAL_CLIENT_ID: ${{ secrets.VITE_PAYPAL_CLIENT_ID }}
            VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}
            RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
            RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
            AWS_REGION: us-east-1
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Debug Environment Variables
              run: |
                  echo "NODE_ENV: $NODE_ENV"
                  echo "VITE_API_URL: $VITE_API_URL"
                  echo "JWT_SECRET: $JWT_SECRET"
                  echo "VITE_PAYPAL_CLIENT_ID: $VITE_PAYPAL_CLIENT_ID"
                  echo "VITE_STRIPE_PUBLISHABLE_KEY: $VITE_STRIPE_PUBLISHABLE_KEY"
                  echo "RECAPTCHA_SITE_KEY: $RECAPTCHA_SITE_KEY"
                  echo "RECAPTCHA_SECRET_KEY: $RECAPTCHA_SECRET_KEY"

            - name: Log in to Amazon ECR
              id: login-ecr
              run: |
                  aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 533267071464.dkr.ecr.us-east-1.amazonaws.com

            - name: Build and Push Docker Image to ECR
              id: build-and-push
              run: |
                  docker buildx build --platform linux/amd64 --tag 533267071464.dkr.ecr.us-east-1.amazonaws.com/atalanta-frontend:latest --push .

            - name: Deploy to AWS App Runner
              id: deploy-apprunner
              run: |
                  aws apprunner update-service --service-arn arn:aws:apprunner:us-east-1:533267071464:service/atalanta-laravel-client/3ebb62f0edff4b2cb697d46766422063 --source-configuration '{"ImageRepository":{"ImageIdentifier":"533267071464.dkr.ecr.us-east-1.amazonaws.com/atalanta-frontend:latest","ImageConfiguration":{"Port":"80"}}}'
